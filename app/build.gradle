plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'jacoco'
    id 'com.google.firebase.appdistribution'
    id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.devtools.ksp'
    id 'com.google.android.gms.oss-licenses-plugin'
}

def buildPropFile = rootProject.file('build.properties')
Properties buildProps = new Properties()
buildProps.load(new FileInputStream(buildPropFile))

android {
    namespace "com.lethalmaus.exampleandroidproject"
    compileSdk 34

    defaultConfig {
        applicationId "com.lethalmaus.exampleandroidproject"
        minSdk 23
        targetSdk 34
        versionCode buildProps["VERSION_CODE"] as Integer
        versionName buildProps["VERSION_NAME"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testCoverage.jacocoVersion = "0.8.7"
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig true
        dataBinding true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    flavorDimensions =["environment"]
    productFlavors {
        mock {
            dimension "environment"
            applicationIdSuffix ".mock"
        }

        production {
            dimension "environment"
            firebaseAppDistribution {
                releaseNotesFile="./release-notes.txt"
            }
        }
    }

    lintOptions {
        abortOnError true
        ignoreWarnings false
        checkAllWarnings true
        warningsAsErrors false
        enable 'StopShip'
        fatal 'StopShip'
    }

    android.variantFilter { variant ->
        if (variant.getName() == 'mockRelease') {
            variant.setIgnore(true)
        }
    }
}

android.applicationVariants.configureEach { variant ->
    def googleTask = tasks.findByName("process${variant.name.capitalize()}GoogleServices")
    googleTask.enabled = "mock" != variant.flavorName
}

def exclusions = ['**/R.class',
                  '**/R$*.class',
                  '**/Manifest*.*',
                  '**/android/databinding/*',
                  'android/**/*.*',
                  '**/BuildConfig.*',
                  '**/*$ViewBinder*.*',
                  '**/*$ViewInjector*.*',
                  '**/Lambda$*.class',
                  '**/Lambda.class',
                  '**/*Lambda.class',
                  '**/*Lambda*.class',
                  '**/models/**'
]
jacoco {
    toolVersion = "0.8.7"
}

tasks.withType(Test).configureEach {
    jacoco.includeNoLocationClasses = true
}

tasks.register('jacocoDebugReport', JacocoReport) {
    dependsOn["createDebugCoverageReport"]
    group 'Reporting'
    description "Generate debug Jacoco coverage reports."

    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, excludes: exclusions)
        }))
    }

    additionalSourceDirs.setFrom(files("src/main/java"))
    sourceDirectories.setFrom(files("src/main/java"))
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation "androidx.compose.ui:ui:1.6.0-alpha05"
    implementation "androidx.compose.material:material:1.6.0-alpha05"
    implementation "androidx.compose.compiler:compiler:1.5.3"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation "androidx.fragment:fragment-ktx:1.6.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.2'
    implementation 'com.airbnb.android:lottie:3.5.0'
    implementation "com.github.bumptech.glide:glide:4.15.1"
    ksp "com.github.bumptech.glide:ksp:4.15.1"
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation("com.google.android.play:app-update:2.1.0")
    implementation("com.google.android.play:app-update-ktx:2.1.0")
    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:4.0.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:4.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2'
    testImplementation 'junit:junit:4.13.2'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.11'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.5.1"
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
}